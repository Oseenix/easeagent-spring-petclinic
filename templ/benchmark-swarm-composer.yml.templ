version: '3'

services:
  config-server:
    image: springcommunity/spring-petclinic-config-server
    #container_name: config-server
    volumes:
    - ${SCRIPTPATH}/spring-petclinic-microservices-config:/git-repo
    environment:
      - GIT_REPO=/git-repo
      - SPRING_PROFILES_ACTIVE=native
    deploy:
      placement:
        constraints: [node.role == manager]
    ports:
      - "8888:8888"

  discovery-server:
    image: springcommunity/spring-petclinic-discovery-server
    #container_name: discovery-server
    depends_on:
      - config-server
    entrypoint: ["./dockerize","-wait=tcp://config-server:8888","-timeout=60s","--","java", "org.springframework.boot.loader.JarLauncher"]
    deploy:
      placement:
        constraints: [node.role == manager]
    ports:
      - "8761:8761"

  customers-service:
    image: springcommunity/spring-petclinic-customers-service
    #container_name: customers-service
    volumes:
     - ${SCRIPTPATH}/easeagent:/easeagent-volume
    depends_on:
     - config-server
     - discovery-server
    entrypoint: 
      - "./dockerize"
      - "-wait=tcp://discovery-server:8761"
      - "-timeout=60s"
      - "--"
      - "java"
      - "$JAVA_AGENT_CONFIG"
      - "-Deaseagent.config.path=/easeagent-volume/${EASEAGENT_CONFIG_FILE}"
      - "-Deaseagent.name=customers-service"
      - "-Deaseagent.server.port=9900"
      - "-Dspring.sleuth_enabled=false"
      - "-Dspring.sleuth.web.enabled=false"
      - "org.springframework.boot.loader.JarLauncher"
    deploy:
      placement:
        constraints: 
          - node.hostname == t08
    ports:
      - "8081:8081"

  vets-service:
    image: springcommunity/spring-petclinic-vets-service
    #container_name: vets-service
    volumes:
     - ${SCRIPTPATH}/easeagent:/easeagent-volume
    depends_on:
     - config-server
     - discovery-server
    entrypoint: 
      - "./dockerize"
      - "-wait=tcp://discovery-server:8761"
      - "-timeout=60s"
      - "--"
      - "java"
      - "$JAVA_AGENT_CONFIG"
      - "-Deaseagent.config.path=/easeagent-volume/${EASEAGENT_CONFIG_FILE}"
      - "-Deaseagent.name=vets-service"
      - "-Deaseagent.server.port=9900"
      - "-Dspring.sleuth_enabled=false"
      - "-Dspring.sleuth.web.enabled=false"
      - "org.springframework.boot.loader.JarLauncher"
    deploy:
      placement:
        constraints: 
          - node.hostname == t08
    ports:
      - "8083:8083"

  visits-service:
    image: springcommunity/spring-petclinic-visits-service
    #container_name: visits-service
    volumes:
     - ${SCRIPTPATH}/easeagent:/easeagent-volume
    depends_on:
     - config-server
     - discovery-server
    entrypoint: 
      - "./dockerize"
      - "-wait=tcp://discovery-server:8761"
      - "-timeout=60s"
      - "--"
      - "java"
      - "$JAVA_AGENT_CONFIG"
      - "-Deaseagent.config.path=/easeagent-volume/${EASEAGENT_CONFIG_FILE}"
      - "-Deaseagent.name=visits-service"
      - "-Deaseagent.server.port=9900"
      - "-Dspring.sleuth_enabled=false"
      - "-Dspring.sleuth.web.enabled=false"
      - "org.springframework.boot.loader.JarLauncher"
    deploy:
      placement:
        constraints: 
          - node.hostname == t07
    ports:
      - "8082:8082"


  api-gateway:
    image: springcommunity/spring-petclinic-api-gateway
    #container_name: api-gateway
    volumes:
     - ${SCRIPTPATH}/easeagent:/easeagent-volume
    depends_on:
     - config-server
     - discovery-server
    entrypoint: 
      - "./dockerize"
      - "-wait=tcp://discovery-server:8761"
      - "-timeout=60s"
      - "--"
      - "java"
      - "$JAVA_AGENT_CONFIG"
      - "-Deaseagent.config.path=/easeagent-volume/${EASEAGENT_CONFIG_FILE}"
      - "-Deaseagent.name=api-service"
      - "-Deaseagent.log.conf=/easeagent-volume/easeagent-log4j2.xml"
      - "-Deaseagent.server.port=9900"
      - "-Dspring.sleuth_enabled=false"
      - "-Dspring.sleuth.web.enabled=false"
      - "org.springframework.boot.loader.JarLauncher"
    deploy:
      placement:
        constraints: 
          - node.hostname == t07
    ports:
      - "8080:8080"

